{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/contact/contact.component.html","webpack:///./src/app/components/contact/contact.component.ts","webpack:///./src/app/components/experience/experience.component.html","webpack:///./src/app/components/experience/experience.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/personal-data/personal-data.component.html","webpack:///./src/app/components/personal-data/personal-data.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/components/skills/skills.component.html","webpack:///./src/app/components/skills/skills.component.ts","webpack:///./src/app/components/studies/studies.component.html","webpack:///./src/app/components/studies/studies.component.ts","webpack:///./src/app/components/works/works.component.html","webpack:///./src/app/components/works/works.component.ts","webpack:///./src/app/pipes/sanitize.pipe.ts","webpack:///./src/app/services/datos.service.ts","webpack:///./src/app/services/email.service.ts","webpack:///./src/app/services/work.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div class=\"container-fluid p-0 h-100\">\n  <div class=\"row no-gutters h-100\">\n    <div class=\"col-lg-3 col-md-3 col-sm-12 col-12\">\n        <sidebar></sidebar>\n    </div>\n    <div class=\"col-lg-9 col-md-9 col-sm-12 col-12 h-100 panel-left\">\n      <div class=\"row no-gutters h-100\">\n        <div class=\"col-12\">\n          <header-comp></header-comp>\n        </div>\n        <div class=\"content col-12\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination'; \nimport { APP_ROUTING } from './app.routes';\n\n// Componets\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { SkillsComponent } from './components/skills/skills.component';\nimport { ExperienceComponent } from './components/experience/experience.component';\nimport { StudiesComponent } from './components/studies/studies.component';\nimport { PersonalDataComponent } from './components/personal-data/personal-data.component';\nimport { WorksComponent } from './components/works/works.component';\n\n// Services\nimport { DatosService } from './services/datos.service'\nimport { EmailService } from './services/email.service'\nimport { WorkService } from './services/work.service';\n\n// Pipes\nimport { SanitizePipe } from './pipes/sanitize.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    HeaderComponent,\n    HomeComponent,\n    ContactComponent,\n    SkillsComponent,\n    ExperienceComponent,\n    StudiesComponent,\n    PersonalDataComponent,\n    WorksComponent,\n    SanitizePipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    NgxPaginationModule,\n    APP_ROUTING\n  ],\n  providers: [\n    DatosService,\n    EmailService,\n    WorkService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div id=\"contact\" class=\"col-12 h-100\">\n\n    <div class=\"bg-light\" *ngIf=\"load\">\n\n        <div *ngIf=\"enviado && correcto\" class=\"alert alert-success\" role=\"alert\">\n            ¡Mensaje enviado correctamente!\n        </div>\n\n        <div *ngIf=\"enviado && !correcto\" class=\"alert alert-danger\" role=\"alert\">\n            Ha habido un error, pruebalo mas tarde.\n        </div>\n\n        <form #form=\"ngForm\" class=\"form-horizontal\" method=\"post\" (ngSubmit)=\"sendEmail(form)\">\n            <fieldset>\n\n                <legend class=\"text-center\">\n                    <h1>Contacto</h1>\n                </legend>\n                <div class=\"controls\">\n                    <label class=\"control-label\" for=\"name\">Nombre (*)</label>\n                    <input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Tu nombre\" class=\"form-control\" [(ngModel)]=\"dataForm.name\"\n                        #name=\"ngModel\" required>\n\n                    <div class=\"alert alert-danger message-error\" role=\"alert\" *ngIf=\"name.errors?.required && name.dirty\">\n                        El nombre es obligatorio\n                    </div>\n\n                    <label class=\"control-label\" for=\"email\">Tu E-mail (*)</label>\n                    <input id=\"email\" name=\"email\" type=\"text\" placeholder=\"Tu email\" class=\"form-control\" [(ngModel)]=\"dataForm.email\"\n                        #email=\"ngModel\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n\n                    <div class=\"alert alert-danger message-error\" role=\"alert\" *ngIf=\"email.errors?.required && email.dirty\">\n                        El email es obligatorio\n                    </div>\n\n                    <div class=\"alert alert-danger message-error\" role=\"alert\" *ngIf=\"email.errors?.pattern && email.dirty\">\n                        El email no tiene el formato correcto\n                    </div>\n\n\n                    <label class=\" control-label\" for=\"message\">Tu mensaje (*)</label>\n                    <textarea id=\"message\" class=\"form-control\" name=\"message\" placeholder=\"Escribe tu mensaje...\" rows=\"10\"\n                        [(ngModel)]=\"dataForm.mensaje\" #message=\"ngModel\" required>\n                            </textarea>\n\n                    <div class=\"alert alert-danger message-error\" role=\"alert\" *ngIf=\"message.errors?.required && message.dirty\">\n                        El mensaje es obligatorio\n                    </div>\n\n                    <button type=\"submit\" [disabled]=\"form.invalid\" class=\"col-md-12 btn btn-primary btn-lg\">Enviar</button>\n\n                </div>\n\n            </fieldset>\n        </form>\n    </div>\n    <div class=\"h-100\" *ngIf=\"!load\">\n        <div class=\"spinner\">\n            <img src=\"./assets/img/spinner.gif\" />\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmailService } from '../../services/email.service';\nimport { NgForm } from '@angular/forms';\nimport { DatosService } from '../../services/datos.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public dataForm = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"mensaje\": \"\"\n  }\n\n  public enviado = false;\n  public correcto = true;\n  public load = false;\n\n  constructor(private emailService: EmailService,\n    private dataService: DatosService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      \n      const showPage = data[\"showContact\"];\n\n      if (!showPage) {\n        this.router.navigate(['/inicio']);\n      }\n\n      this.emailService.url = data[\"urlPHPEmail\"];\n      this.load = true;\n    }, error => {\n      console.log(\"Error: \" + error);\n      this.load = true;\n    });\n  }\n\n  sendEmail(form: NgForm) {\n\n    this.load = false;\n\n    this.emailService.sendEmail(this.dataForm).subscribe(res => {\n\n      if (res === 1) {\n        this.correcto = true;\n      } else {\n        this.correcto = false;\n      }\n      this.enviado = true;\n      this.load = true;\n\n    }, error => {\n      this.correcto = false;\n      this.enviado = true;\n      this.load = true;\n      console.log('Err: ' + error);\n    });\n  }\n\n\n\n}\n","<div id=\"experience\" class=\"col-12 h-100\">\n    <ng-container *ngIf=\"load\">\n        <h1>Experiencias</h1>\n        <table class=\"table table-striped  table-responsive\">\n            <thead>\n                <tr>\n                    <th>Fecha</th>\n                    <th>Empresa</th>\n                    <th>Puesto</th>\n                    <th>Tareas puesto</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of experiences\">\n                    <td>{{row.rango}}</td>\n                    <td>{{row.compania}}</td>\n                    <td>{{row.posicion}}</td>\n                    <td>{{row.descripcion}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n    <div class=\"h-100\" *ngIf=\"!load\">\n        <div class=\"spinner\">\n            <img src=\"./assets/img/spinner.gif\" />\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent implements OnInit {\n\n  public experiences: any[];\n  public load = false;\n\n  constructor(private dataService: DatosService) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      this.experiences = data[\"experiencias\"];\n      this.load = true;\n    });\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\"\n    aria-expanded=\"false\" aria-label=\"Menu de Navegacion\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbar\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['inicio']\">Inicio</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['datos-personales']\">Datos personales</a>\n      </li>\n      <li *ngIf=\"showSkills\" class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['habilidades']\">Habilidades</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['estudios']\">Estudios</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['experiencia-laboral']\">Experiencia</a>\n      </li>\n      <li *ngIf=\"showContact\" class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['contacto']\">Contacto</a>\n      </li>\n      <li *ngIf=\"showWorks\" class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['trabajos']\">Trabajos</a>\n      </li>\n    </ul>\n\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'header-comp',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  public showSkills = false;\n  public showContact = false;\n  public showWorks = false;\n\n\n  constructor(private dataService:DatosService) { }\n\n  ngOnInit() {\n\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      this.showSkills = data[\"showSkills\"];\n      this.showContact = data[\"showContact\"];\n      this.showWorks = data[\"showWorks\"];\n    }, error =>{\n      console.log(error);\n    });\n  }\n\n}\n","<div id=\"home\" class=\"col-12\">\n  <div *ngIf=\"load\" [innerHTML]=\"content | sanitize\"></div>\n\n  <div class=\"h-100\" *ngIf=\"!load\">\n    <div class=\"spinner\">\n      <img src=\"./assets/img/spinner.gif\" />\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public content;\n  public load = false;\n\n  constructor(private dataService:DatosService) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.INICIO;\n    this.dataService.responseType = DatosService.TEXT;\n    this.dataService.getData().subscribe(data => {\n      this.content = data;\n      this.load = true;\n    }, error =>{\n      console.log(error);\n    });\n  }\n\n}\n","<div id=\"personal-data\" class=\"col-12 h-100\">\n\n    <ng-container *ngIf=\"load\">\n        <h1>Datos personales</h1>\n        <table class=\"table table-striped table-responsive\">\n            <thead>\n                <tr>\n                    <th>Campo</th>\n                    <th>Valor</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of personal_data\">\n                    <td>{{row.column_display}}</td>\n                    <td>{{row.column_value}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n\n    <div class=\"h-100\" *ngIf=\"!load\">\n        <div class=\"spinner\">\n            <img src=\"./assets/img/spinner.gif\" />\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'app-personal-data',\n  templateUrl: './personal-data.component.html',\n  styleUrls: ['./personal-data.component.css']\n})\nexport class PersonalDataComponent implements OnInit {\n\n  public personal_data: any[];\n  public load = false;\n\n  constructor(private dataService: DatosService) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      this.personal_data = data[\"datos_personales\"];\n      this.load = true;\n    }\n    );\n\n  }\n\n}\n","<div id=\"sidebar\" class=\"pt-3\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-6 text-center\">\n      <img class=\"img-fluid rounded-circle\" [src]=\"img_profile\">\n    </div>\n    <div class=\"col-md-12 col-6\">\n      <h1>Curriculum vitae</h1>\n      <h2>{{name}}</h2>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"social-block col-md-12 col-6 mb-md-2\" *ngFor=\"let sn of social_networks\">\n      <a class=\"btn btn-block rounded-0 btn-social btn-{{sn.icon}}\" href=\"{{sn.link}}\" target=\"_blank\">\n        <span class=\"fa fa-{{sn.icon}}\"></span> {{sn.name}}\n      </a>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  public social_networks = [];\n  public img_profile: string;\n  public name: string;\n\n  constructor(private dataService:DatosService) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data =>{\n      this.social_networks = data[\"social_networks\"];\n      this.img_profile = data[\"img_profile\"];\n      this.name = data[\"name\"];\n    });\n  }\n\n}\n","<div id=\"skills\" class=\"col-12 h-100\">\n  <ng-container *ngIf=\"load\">\n    <ng-container *ngFor=\"let skill of skills\">\n      <div class=\"progress\" [ngClass]=\"skill.class_color.color\">\n        <div class=\"progress-bar progress-bar-striped active\" [ngClass]=\"skill.class_color.class_progress\" [ngStyle]=\"{'width.%': skill.valor}\">\n          <div class=\"progress-value\">{{skill.nombre+' ('+skill.valor+'%)'}}</div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <div class=\"h-100\" *ngIf=\"!load\">\n    <div class=\"spinner\">\n      <img src=\"./assets/img/spinner.gif\" />\n    </div>\n  </div>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent implements OnInit {\n\n  public skills: any[];\n  public load = false;\n\n  constructor(private dataService: DatosService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      const showPage = data[\"showSkills\"];\n\n      if(!showPage){  \n        this.router.navigate(['/inicio']);\n      }\n\n      this.skills = data[\"habilidades\"];\n\n      for (let skill of this.skills) {\n        skill.class_color = this.chooseColor(skill);\n      }\n\n      this.load = true;\n\n    }, error => {\n      console.log(error);\n      this.load = true;\n    });\n\n  }\n\n  chooseColor(skill: any) {\n\n    let class_color = { \"color\": '', \"class_progress\": '' };\n    if (skill.valor >= 80 && skill.valor <= 100) {\n      class_color.color = \"green\";\n      class_color.class_progress = \"bg-success\";\n    } else if (skill.valor >= 60 && skill.valor < 80) {\n      class_color.color = \"blue\";\n      class_color.class_progress = \"bg-info\";\n    } else if (skill.valor >= 40 && skill.valor < 60) {\n      class_color.color = \"yellow\";\n      class_color.class_progress = \"bg-warning\";\n    } else {\n      class_color.color = \"red\";\n      class_color.class_progress = \"bg-danger\";\n    }\n\n    return class_color;\n  }\n\n\n}\n","<div id=\"studies\" class=\"col-12 h-100\">\n  <ng-container *ngIf=\"load\">\n\n    <h1>Estudios</h1>\n    <table class=\"table table-striped  table-responsive\">\n      <thead>\n        <tr>\n          <th>Fecha</th>\n          <th>Lugar</th>\n          <th>Titulo</th>\n          <th>Nota</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of studies\">\n          <td>{{row.rango}}</td>\n          <td>{{row.lugar}}</td>\n          <td>{{row.titulo}}</td>\n          <td>{{row.nota}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <br />\n\n    <h1>Cursos</h1>\n    <table class=\"table table-striped table-responsive\">\n      <thead>\n        <tr>\n          <th>Año</th>\n          <th>Curso</th>\n          <th>Lugar</th>\n          <th>Horas</th>\n          <th>Tipo</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of courses\">\n          <td>{{row.anio}}</td>\n          <td>{{row.nombre}}</td>\n          <td>{{row.lugar}}</td>\n          <td>{{row.horas}}</td>\n          <td>{{row.tipo}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n\n\n  <div class=\"h-100\" *ngIf=\"!load\">\n    <div class=\"spinner\">\n      <img src=\"./assets/img/spinner.gif\" />\n    </div>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\n\n@Component({\n  selector: 'app-studies',\n  templateUrl: './studies.component.html',\n  styleUrls: ['./studies.component.css']\n})\nexport class StudiesComponent implements OnInit {\n\n  public studies:any[];\n  public courses:any[];\n  public load = false;\n\n  constructor(private dataService: DatosService) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n      this.studies = data[\"estudios\"];\n      this.courses = data[\"cursos\"];\n      this.load =true;\n    }, error => {\n      console.log(error);\n      this.load =true;\n    });\n\n  }\n\n}\n","<div id=\"works\" class=\"col-12 h-100\">\n  <ng-container *ngIf=\"load\">\n    <div *ngIf=\"posts.length == 0\">\n      No hay trabajos para mostrar\n    </div>\n\n    <ng-container *ngIf=\"posts.length > 0\">\n      <div class=\"row\">\n\n        <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-5\" *ngFor=\"let post of posts | paginate: {itemsPerPage: itemsPerPage, currentPage: page}\">\n\n          <div class=\"card h-100\">\n            <img class=\"card-image-top w-100 img-fluid\" [src]=\"post.thumbnail\" />\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">{{post.title}}</h3>\n              <p class=\"card-text\" [innerHTML]=\"post.excerpt\"></p>\n            </div>\n            <div class=\"card-footer\">\n              <a class=\"btn btn-block btn-primary\" role=\"button\" [href]=\"post.url\" target=\"_blank\" >Ir al post</a>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row\" *ngIf=\"posts.length > itemsPerPage\">\n        <div class=\"col-12 text-center mb-5\">\n          <div class=\"pagination-footer\" >\n            <pagination-controls nextLabel=\"Siguiente\" previousLabel=\"Anterior\" (pageChange)=\"page = $event\">\n            </pagination-controls>\n          </div>\n        </div>\n      </div>\n\n    </ng-container>\n\n\n\n  </ng-container>\n  <div class=\"h-100\" *ngIf=\"!load\">\n    <div class=\"spinner\">\n      <img src=\"./assets/img/spinner.gif\" />\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DatosService } from '../../services/datos.service';\nimport { WorkService } from '../../services/work.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-works',\n  templateUrl: './works.component.html',\n  styleUrls: ['./works.component.css']\n})\nexport class WorksComponent implements OnInit {\n\n  public posts = [];\n  public load = false;\n\n  public itemsPerPage;\n\n  public page: number = 1;\n\n  constructor(private dataService: DatosService,\n    private works: WorkService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.dataService.url = DatosService.DATOS;\n    this.dataService.responseType = DatosService.JSON;\n    this.dataService.getData().subscribe(data => {\n\n      const showPage = data[\"showWorks\"];\n\n      if (!showPage) {\n        this.router.navigate(['/inicio']);\n      }\n\n\n\n      const webUrl = data[\"webUrl\"];\n      const categoryId = data[\"categoryId\"];\n      this.itemsPerPage = data[\"itemsPerPageWorks\"];\n\n      this.works.webUrl = webUrl;\n      this.works.categoryId = categoryId;\n\n      this.works.getPosts().subscribe(postData => {\n        this.posts = postData[\"posts\"];\n        this.load = true;\n      }, error => {\n        console.log(error);\n        this.load = true\n      });\n\n    }, error => {\n      console.log(error);\n      this.load = true\n    });\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'sanitize' })\nexport class SanitizePipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {\n\n  }\n  transform(html: string): SafeHtml {\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\n  }\n}","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class DatosService {\n\n    private _url: string;\n    private _responseType;\n\n    public set url(url: string){\n        this._url = url;\n    }\n\n    public set responseType(responseType: string){\n        this._responseType = responseType;\n    }\n\n    public static DATOS = './assets/datos.json';\n    public static INICIO = './assets/inicio.html';\n\n    public static JSON = 'json';\n    public static TEXT = 'text';\n\n\n\n    constructor(private http: HttpClient) { }\n\n    public getData(){\n        return this.http.get(this._url, {responseType: this._responseType});\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class EmailService {\n\n    private _url;\n\n    public set url(url){\n        this._url = url;\n    }\n\n    constructor(private http: HttpClient) { }\n\n    sendEmail(data) {\n\n        let options = new HttpHeaders()\n            .set('Content-Type', 'Content-Type:text/plain; charset=UTF-8');\n        return this.http.post(this._url, data, { headers: options });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class WorkService {\n\n    private _webUrl: string;\n    private _categoryId: number\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    set webUrl(webUrl: string) {\n        this._webUrl = webUrl;\n    }\n\n    set categoryId(categoryId: number) {\n        this._categoryId = categoryId;\n    }\n\n\n    getPosts() {\n\n        let headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json; charset=UTF-8');\n\n        const url = this._webUrl + \"/?json=get_category_posts&category_id=\" + this._categoryId;\n        return this.http.get(url, {headers: headers});\n\n    }\n\n    /*getData(data: any){\n        const dataProcess = data.json();\n        return dataProcess ? dataProcess.posts : [];\n    }*/\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}